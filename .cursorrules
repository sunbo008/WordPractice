# Word Tetris 游戏开发约束规则

## 🎯 核心原则
本项目基于 `word_tetris_game_design.md` 设计方案开发，所有实现必须严格遵循设计方案的规定。

## ⚠️ 关键问题识别

### 问题1：缺少炮管射击机制 ✅ 已解决
**设计方案要求**：
- 底部应有炮管（🔫）瞄准上方单词
- 输入完全正确时，炮管发射炮弹击中单词
- 炮弹轨迹应有橙色/黄色光束效果
- 单词被击中时显示多彩粒子爆炸动画

**已完成实现**：
- ✅ 炮管渲染（金属灰色，底部中央）
- ✅ 炮管瞄准动画（平滑旋转指向目标）
- ✅ 炮弹发射轨迹（橙黄渐变光束）
- ✅ 多彩粒子爆炸特效（6种颜色）

**正确实现要求**：
```javascript
// 必须包含：
1. 炮管渲染（底部中央，金属灰色）
2. 炮管瞄准动画（指向当前下降单词）
3. 炮弹发射轨迹（从炮管到单词的光束）
4. 粒子爆炸效果（多彩粒子散开）
5. 音效系统（射击音、爆炸音）
```

### 问题2：错误处理机制不符合方案 ✅ 已解决
**设计方案要求**：
- 输入错误字母时，在该字母上显示血色红叉（❌）
- 清空所有输入，等待重新输入
- 不是简单的边框变红色

**已完成实现**：
- ✅ 血色红叉标记（在错误字母位置显示）
- ✅ 闪烁动画效果（红色 ↔ 深红色）
- ✅ 自动清空输入（300ms淡出动画）
- ✅ 重置游戏状态（连击和完美等级）

**正确实现要求**：
```javascript
// 必须包含：
1. 错误字母上显示血色红叉覆盖
2. 红叉闪烁动画
3. 自动清空所有输入
4. 淡出效果动画
```

### 问题3：评分系统不完整 ✅ 已解决
**设计方案要求**：
- 射击奖励：成功射击单词额外+2分
- 速度奖励：快速射击额外+50%分数
- 连击奖励：连续射击3个以上单词，每个额外+1分

**已完成实现**：
- ✅ 射击奖励：+2分（在onBulletHit中实现）
- ✅ 速度奖励：2秒内完成+50%分数
- ✅ 连击奖励：连击3+时每个+1分
- ✅ 完美等级奖励：无失误+20分

**正确实现要求**：
```javascript
// 评分公式：
基础分 = 缺失字母数 × 1
射击奖励 = +2分（每次成功射击）
速度奖励 = 基础分 × 50%（如果在2秒内完成）
连击奖励 = +1分（连击3次以上时）
```

### 问题4：单词下降顺序机制 ✅ 已确认
**设计方案强调**：
- **只有当前单词被射击消失或放入堆叠区后，下一个单词才开始从缓冲区下降**
- 这是核心游戏机制

**已确认实现正确**：
- ✅ 单个单词机制：`if (this.fallingWords.length === 0)`
- ✅ 顺序下降：只有无下降单词时才从缓冲区生成新单词
- ✅ 缓冲区倒计时：红→黄→绿→下降
- ✅ 无并发风险：严格的状态控制

## 📋 严格执行的设计要求

### 1. 游戏机制（按优先级）
```
P0 - 必须实现（已全部完成）：
✅ 单个单词下降（同时只有一个）
✅ 炮管射击系统（炮管+炮弹+爆炸）
✅ 错误处理（血色红叉+清空输入）
✅ 放弃按键（空格键）
✅ 堆叠区管理
✅ 缓冲区倒计时（红黄绿灯）

P1 - 重要功能（已全部完成）：
✅ 实时输入反馈
✅ 生词本系统
✅ 数据存储
✅ 完整评分系统（包含射击奖励+2分）

P2 - 增强功能（部分完成）：
❌ 音效系统（待实现）
✅ 复习模式
✅ 数据导出
```

### 2. 视觉设计要求（已全部完成）
```
必须包含的视觉元素：
✅ 炮管（金属灰色，底部中央）
✅ 炮弹轨迹（橙色/黄色光束）
✅ 爆炸粒子效果（多彩粒子）
✅ 血色红叉标记（错误反馈）
✅ 实时输入高亮（绿色/红色）
✅ 单词边框（金色）
✅ 堆叠区单词（灰色区分）
```

### 3. 动画要求（已全部完成）
```
必须实现的动画：
✅ 炮管瞄准动画（平滑旋转跟踪）
✅ 炮弹发射轨迹动画（光束飞行）
✅ 爆炸粒子动画（径向散射+重力）
✅ 错误红叉闪烁动画（颜色交替）
✅ 输入清空淡出动画（300ms过渡）
✅ 单词下降动画
✅ 分数飞行动画
✅ 等级提升动画
```

## 🔧 技术实现要求

### Canvas渲染层次
```
渲染顺序（从底到顶）：
1. 背景层
2. 堆叠区单词
3. 炮管（固定在底部）
4. 下降单词
5. 炮弹轨迹（射击时）
6. 爆炸粒子（击中时）
7. UI元素（分数、信息栏）
```

### 粒子系统实现
```javascript
// 爆炸效果必须包含：
class Particle {
    constructor(x, y, color, velocity, lifetime)
    update() // 更新位置和透明度
    render(ctx) // 渲染粒子
}

class ExplosionEffect {
    constructor(x, y, wordLength)
    createParticles(count) // 创建20-50个粒子
    update() // 更新所有粒子
    render(ctx) // 渲染爆炸效果
}
```

### 炮管系统实现
```javascript
class Cannon {
    constructor(x, y)
    aimAt(targetX, targetY) // 瞄准目标
    shoot(targetX, targetY) // 发射炮弹
    render(ctx) // 渲染炮管
}

class Bullet {
    constructor(startX, startY, targetX, targetY)
    update() // 更新炮弹位置
    render(ctx) // 渲染炮弹轨迹
    hasReachedTarget() // 是否到达目标
}
```

## 📝 开发检查清单

### 在实现任何功能前必须检查：
- [ ] 该功能是否在 word_tetris_game_design.md 中有明确描述？
- [ ] 实现方式是否与设计方案一致？
- [ ] 是否遗漏了设计方案中的视觉元素？
- [ ] 是否遗漏了设计方案中的动画效果？
- [ ] 评分系统是否完整？

### 修改现有代码前必须确认：
- [ ] 修改是否符合设计方案？
- [ ] 是否影响其他已实现的功能？
- [ ] 是否保持了游戏的核心机制？

## 🚨 禁止的行为

1. **禁止简化设计方案**：不能因为实现复杂而省略设计要求
2. **禁止替代方案**：不能用"类似"的方案替代明确的设计要求
3. **禁止自作主张**：所有功能必须严格按设计方案实现
4. **禁止跳过视觉效果**：动画、特效、视觉元素都是核心体验的一部分

## 📖 设计方案优先级

**绝对权威**：word_tetris_game_design.md
- 所有实现必须以此为准
- 发生冲突时，以设计方案为准
- 不确定时，回头查看设计方案

## 🎯 实施状态总结

### ✅ P0 核心功能（已全部完成）：
1. ✅ 炮管系统（炮管渲染+瞄准动画）
2. ✅ 炮弹射击（轨迹动画+击中判定）
3. ✅ 爆炸特效（粒子系统+多彩动画）
4. ✅ 错误处理（血色红叉+清空动画）
5. ✅ 评分系统（射击奖励+2分）

### ✅ P1 重要功能（已全部完成）：
1. ✅ 实时输入反馈系统
2. ✅ 生词本管理系统
3. ✅ 数据存储系统
4. ✅ 复习模式
5. ✅ 数据导出功能

### 📋 P2 增强功能（可选优化）：
1. ⏳ 音效系统（射击音、爆炸音、背景音乐）
2. ⏳ 音标模式（结合项目音标资源）
3. ⏳ 主题模式（不同词汇主题）
4. ⏳ 多人模式（竞技/合作）
5. ⏳ 移动端适配

## 💡 设计方案解读原则

1. **字面理解优先**：设计方案说"炮管"就必须有炮管视觉元素
2. **完整实现**：不能只实现功能逻辑，忽略视觉表现
3. **用户体验**：游戏性和视觉效果同等重要
4. **教育价值**：所有设计都服务于英语学习目标

## 🔍 质量保证

每次提交前必须检查：
- [ ] 是否100%符合设计方案？
- [ ] 是否有遗漏的视觉元素？
- [ ] 是否有遗漏的动画效果？
- [ ] 游戏体验是否完整？
- [ ] 评分系统是否正确？

---

**记住：设计方案是圣经，不是建议！**

所有开发都必须严格遵循 `word_tetris_game_design.md` 的每一个细节！