# Word Tetris 游戏开发约束规则

## 🎯 核心原则（最重要）

**唯一权威**：`word_tetris_game_design.md`

所有实现必须 100% 遵循设计文档，包括但不限于：
- 功能逻辑
- 视觉效果
- 动画表现
- 交互方式
- UI 布局

**发生任何冲突时，以设计文档为准！**

---

## 📋 开发流程

### 1. 实现任何功能前

**必须先做**：
1. 在 `word_tetris_game_design.md` 中找到对应的设计描述
2. 完整阅读该功能的所有细节要求
3. 确认理解了所有视觉效果和动画要求
4. 开始实现

**禁止**：
- 凭想象实现
- 简化设计要求
- 用"类似"方案替代
- 忽略视觉效果

### 2. 实现功能时

**要求**：
- 功能逻辑 100% 符合设计
- 视觉效果 100% 符合设计
- 动画效果 100% 符合设计
- 不能少任何一个细节

**示例**：
- 设计说"炮管" → 必须有炮管视觉元素
- 设计说"爆炸时显示中文翻译" → 必须实现中文翻译爆炸动画
- 设计说"血色红叉" → 必须是红叉形状，不能只是红色边框
- 设计说"橙色/黄色光束" → 必须是橙黄渐变，不能是单色

### 3. 实现完成后

**必须检查**：
1. 对照设计文档逐项验证
2. 所有描述的效果都实现了吗？
3. 视觉表现符合要求吗？
4. 动画流畅自然吗？

---

## ⚠️ 常见错误

### 错误 1：只实现逻辑，忽略视觉

**错误示例**：
```javascript
// ❌ 错误：只有自动射击逻辑，没有炮管视觉元素
if (inputComplete && isCorrect) {
  removeWord();
}
```

**正确示例**：
```javascript
// ✅ 正确：完整的炮管+炮弹+爆炸系统
1. 渲染炮管（金属灰色、底座、高光）
2. 炮管瞄准动画（平滑旋转）
3. 发射炮弹（橙黄光束轨迹）
4. 爆炸粒子（多彩粒子散射）
5. 中文翻译爆炸动画（从小到大弹出）
```

### 错误 2：简化设计要求

**错误示例**：
```javascript
// ❌ 错误：只改变边框颜色
if (inputWrong) {
  word.borderColor = 'red';
}
```

**正确示例**：
```javascript
// ✅ 正确：血色红叉标记
1. 在错误字母位置显示 X 形状
2. 红叉闪烁动画（红色 ↔ 深红色）
3. 300ms 后自动清空输入
4. 淡出动画效果
```

### 错误 3：遗漏设计细节

**错误示例**：
```javascript
// ❌ 错误：爆炸效果不完整
createExplosion() {
  // 只有粒子爆炸，没有中文翻译
  createParticles();
}
```

**正确示例**：
```javascript
// ✅ 正确：完整的爆炸效果
createExplosion() {
  createParticles();              // 多彩粒子爆炸
  createMeaningExplosion();       // 中文翻译爆炸动画
}
```

---

## ✅ 设计文档关键要求速查

### 视觉元素（必须全部实现）

- ✅ 炮管（金属灰色、底座、高光、炮口）
- ✅ 炮弹轨迹（橙黄渐变光束）
- ✅ 爆炸粒子（6 种颜色、径向散射、重力效果）
- ✅ **中文翻译爆炸动画（从 0.5 倍放大到 2-3 倍，显示 1-2 秒后淡出）**
- ✅ 血色红叉（X 形状、闪烁动画）
- ✅ 实时输入高亮（绿色/红色）
- ✅ 单词边框（金色）
- ✅ 堆叠区单词（红色=放弃，灰色=失败）
- ✅ 缓冲区红黄绿灯

### 动画效果（必须全部实现）

- ✅ 炮管瞄准动画（平滑旋转跟踪目标）
- ✅ 炮弹飞行动画（15 像素/帧）
- ✅ 爆炸粒子动画（径向散射+重力+衰减）
- ✅ **中文翻译爆炸动画（放大→显示→淡出，总时长 1.5-2 秒）**
- ✅ 错误红叉闪烁（10Hz 频率）
- ✅ 输入清空淡出（300ms）
- ✅ 单词下降（基础速度 0.2px/帧）
- ✅ 分数飞行（上升 120px，缩放 1→1.2→0.8）

### 核心机制（必须严格遵守）

- ✅ 单个单词下降（同时只有一个单词在游戏区域）
- ✅ 顺序下降（当前单词消失或堆叠后，下一个才从缓冲区下降）
- ✅ 缓冲区倒计时（红→黄→绿，各 1 秒）
- ✅ 射击奖励（+2 分，这是额外奖励，不能忘记）
- ✅ 错误处理（血色红叉→清空输入→重置状态）

---

## 🔍 自查清单

**每次提交代码前必须检查**：

- [ ] 我是否完整阅读了设计文档中这个功能的描述？
- [ ] 所有描述的视觉元素我都实现了吗？
- [ ] 所有描述的动画效果我都实现了吗？
- [ ] 我是否用"类似"方案替代了设计要求？
- [ ] 我是否简化了设计要求？
- [ ] 我是否遗漏了任何细节？

**如果有任何一项回答"否"或"不确定"，立即返回设计文档查看！**

---

## 📝 常见疏漏功能

### 已发现并修复的疏漏：

1. ✅ **中文翻译爆炸动画** - 最重要的视觉反馈功能
   - 设计要求：英文单词消失时，中文翻译从小到大弹出
   - 字体从 0.5 倍放大到 2-3 倍
   - 显示 1-2 秒后淡出
   - 配合粒子爆炸，营造震撼效果

2. ✅ 射击奖励 +2 分
   - 设计要求：成功射击单词额外 +2 分
   - 不是基础分，是额外奖励

3. ✅ 血色红叉标记
   - 设计要求：在错误字母位置显示 X 形状
   - 不是简单的红色边框

---

## 💡 开发建议

### 理解设计意图

设计文档中的每一个细节都有教育意义：

- **炮管射击**：增强游戏趣味性，吸引学生注意力
- **中文翻译爆炸动画**：强化英文单词与中文意思的关联记忆（最重要！）
- **血色红叉**：明确的错误反馈，帮助学生认识错误
- **多彩粒子爆炸**：正向激励，增强成就感

**不能省略任何一个，因为每个都有教育目的！**

### 阅读顺序建议

实现功能时建议阅读顺序：

1. 先读"游戏机制设计"章节，理解整体流程
2. 再读"界面设计方案"章节，理解视觉要求
3. 最后读"技术实现方案"章节，理解技术细节

---

## 🚨 红线规则

**绝对禁止**：

1. ❌ 不看设计文档就开始实现
2. ❌ 用"类似"方案替代明确要求
3. ❌ 只实现功能逻辑，忽略视觉效果
4. ❌ 简化动画效果（"太复杂了，简单点吧"）
5. ❌ 自作主张修改设计要求

**违反红线规则 = 返工重做！**

---

## 🎯 最终目标

**100% 符合 `word_tetris_game_design.md` 设计方案**

- 功能逻辑：100% 符合
- 视觉效果：100% 符合
- 动画表现：100% 符合
- 游戏体验：100% 符合

**不是 95%，不是 99%，是 100%！**

---

## 📚 参考资源

- **设计方案**：`word_tetris_game_design.md`（唯一权威）
- **实现总结**：`proj/IMPLEMENTATION_SUMMARY.md`（实现记录）
- **测试指南**：`proj/TEST_GUIDE.md`（功能验证）

---

**记住：设计文档是法律，不是参考！**

每一个字、每一个描述、每一个要求都必须 100% 实现！